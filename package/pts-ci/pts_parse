#!/bin/bash

#pasre current data

ANOTHER_LIST="4b d1 unmatched qemu"
CIRCUSTENT_BENCH=("RAND_ADD" "RAND_CAS" "STRIDE1_ADD" "STRIDE1_CAS" "STRIDEN_ADD" "STRIDEN_CAS" "PTRCHASE_ADD" "PTRCHASE_CAS" "CENTRAL_ADD" "CENTRAL_CAS" "SG_ADD" "SG_CAS" "SCATTER_ADD" "SCATTER_CAS" "GATHER_ADD" "GATHER_CAS")

GET_START=n
OUTPUT_PATH=$(dirname "$0")/../../../
REPORT_PATH=$OUTPUT_PATH/images

REPORT_FILENAME=pts_report.log

if [ -f $REPORT_PATH/$REPORT_FILENAME ]; then
	rm $REPORT_PATH/$REPORT_FILENAME
fi
touch $REPORT_PATH/$REPORT_FILENAME

clean_bench_file() {
	if [ -f $1 ]; then
		rm $1
	fi
}

tmp_bench_file() {
	while read LINE
	do
	if [ "$GET_START" == "y" ]; then
		if [[ "$LINE" =~ "pts $2 end" ]]; then
			GET_START=n
			continue
		fi
		echo $LINE >> $3.log
	else
		if [[ "$LINE" =~ "pts $2 start" ]]; then
			GET_START=y
		fi
	fi
done < $1
}

analyze_atomicbench() {
	echo "analyze atomicbench by SWP/CAS/FFA"
	echo "TODO: set ram size for test"
}


mc_num=0
evaluation_atomicbench()
{
	echo "evaluation atomicbench by SCORE"
	SCORE=`cat atomicbench.log | grep score | awk '{print $3}'`
	((mc_num++));
	if [ -f "$REPORT_PATH/ATOMICBENCH_SCORE.txt" ]; then
		rm $REPORT_PATH/ATOMICBENCH_SCORE.txt
	fi
	echo  "$mc_num current $SCORE" | tee -a $REPORT_PATH/ATOMICBENCH_SCORE.txt
	for MC in $ANOTHER_LIST; do
		if [ -f "$(dirname "$0")/lastest/$MC.log" ]; then
			tmp_bench_file $(dirname "$0")/lastest/$MC.log  atomicbench atomicbench_$MC
			SCORE=`cat atomicbench_$MC.log | grep score | awk '{print $3}'`
			((mc_num++));
			echo  "$mc_num $MC $SCORE" | tee -a $REPORT_PATH/ATOMICBENCH_SCORE.txt
			clean_bench_file atomicbench_$MC.log
		fi
	done
	if [ -f "$REPORT_PATH/ATOMICBENCH_SCORE.txt" ]; then
		cp $(dirname "$0")/gnuplot/atomicbench.gnuplot $REPORT_PATH/
		cp $REPORT_PATH/ATOMICBENCH_SCORE.txt ./
		gnuplot $REPORT_PATH/atomicbench.gnuplot
		mv AtomicBench.png $REPORT_PATH/AtomicBench.png
		rm ./ATOMICBENCH_SCORE.txt
		rm $REPORT_PATH/atomicbench.gnuplot
		rm $REPORT_PATH/ATOMICBENCH_SCORE.txt
	fi
}

pasre_atomicbench() {
	tmp_bench_file $1 atomicbench atomicbench
	if [ -f atomicbench.log ]; then
		cat atomicbench.log >> $REPORT_PATH/$REPORT_FILENAME
		analyze_atomicbench >> $REPORT_PATH/$REPORT_FILENAME
		evaluation_atomicbench >> $REPORT_PATH/$REPORT_FILENAME
		clean_bench_file atomicbench.log
	fi
}

update_data()
{
	num=0
	while read line
	do
		echo "${CIRCUSTENT_BENCH[$num]} $line" | tee -a $2
		((num++));
	done < $1
}

evaluation_circustent(){
	echo "evaluation circustent by Giga AMOs/sec (GAMS)"
	echo  "current machine"
	mc_num=0
	if [ -f "$REPORT_PATH/CIRCUSTENT_TIMING.txt" ]; then
		rm $REPORT_PATH/CIRCUSTENT_TIMING.txt
	fi

	if [ -f "$REPORT_PATH/CIRCUSTENT_GAMS.txt" ]; then
		rm $REPORT_PATH/CIRCUSTENT_GAMS.txt
	fi
	if [ -f circustent.log ]; then
		((mc_num++));
		TIMING=`cat circustent.log | grep Timing | awk '{print $4}' | sed 's/^/'$mc_num' current /'`
		GAMS=`cat circustent.log | grep GAMS | awk '{print $5}' | sed 's/^/'$mc_num' current /'`
		echo "$TIMING" > tmp1.txt
		update_data tmp1.txt  $REPORT_PATH/CIRCUSTENT_TIMING.txt
		rm tmp1.txt
		echo "$GAMS" > tmp2.txt
		update_data tmp2.txt $REPORT_PATH/CIRCUSTENT_GAMS.txt
		rm tmp2.txt
	fi

	for MC in $ANOTHER_LIST; do
		if [ -f "$(dirname "$0")/lastest/$MC.log" ]; then
			tmp_bench_file $(dirname "$0")/lastest/$MC.log  circustent circustent_$MC
			((mc_num++));
			TIMING=`cat circustent_$MC.log | grep Timing | awk '{print $4}' | sed 's/^/'$mc_num' '$MC' /'`
			GAMS=`cat circustent_$MC.log | grep GAMS | awk '{print $5}' | sed 's/^/'$mc_num' '$MC' /'`
			echo "$TIMING" > tmp1.txt
			update_data tmp1.txt  $REPORT_PATH/CIRCUSTENT_TIMING.txt
			rm tmp1.txt
			echo "$GAMS" > tmp2.txt
			update_data tmp2.txt $REPORT_PATH/CIRCUSTENT_GAMS.txt
			rm tmp2.txt
			clean_bench_file circustent_$MC.log
		fi
	done

	if [ -f "$REPORT_PATH/CIRCUSTENT_TIMING.txt" ]; then
		cp $(dirname "$0")/gnuplot/circustent_timing.gnuplot $REPORT_PATH/
		cp $REPORT_PATH/CIRCUSTENT_TIMING.txt ./
		gnuplot $REPORT_PATH/circustent_timing.gnuplot
		mv TIMING.png $REPORT_PATH/TIMING.png
		rm ./CIRCUSTENT_TIMING.txt
		rm $REPORT_PATH/circustent_timing.gnuplot
		rm $REPORT_PATH/CIRCUSTENT_TIMING.txt
	fi

	if [ -f "$REPORT_PATH/CIRCUSTENT_GAMS.txt" ]; then
		cp $(dirname "$0")/gnuplot/circustent_gams.gnuplot $REPORT_PATH/
		cp $REPORT_PATH/CIRCUSTENT_GAMS.txt ./
		gnuplot $REPORT_PATH/circustent_gams.gnuplot
		mv GAMS.png $REPORT_PATH/GAMS.png
		rm ./CIRCUSTENT_GAMS.txt
		rm $REPORT_PATH/circustent_gams.gnuplot
		rm $REPORT_PATH/CIRCUSTENT_GAMS.txt
	fi
}

pasre_circustent() {
	tmp_bench_file $1 circustent circustent
	if [ -f circustent.log ]; then
		cat circustent.log >> $REPORT_PATH/$REPORT_FILENAME
		evaluation_circustent >> $REPORT_PATH/$REPORT_FILENAME
		clean_bench_file circustent.log
	fi
}

pasre_bench() {
	echo "will pasre $2 in $1"
	case $2 in
	atomicbench)
		echo "start pasre atomicbench"
		echo "AtomicBench in Current Machine" >> $REPORT_PATH/$REPORT_FILENAME
		pasre_atomicbench $1
		;;
	circustent)
		echo "start pasre circustent"
		echo "CircusTent in Current Machine" >> $REPORT_PATH/$REPORT_FILENAME
		pasre_circustent $1
		;;
 	*)
	 	echo "Not Run $2"
        exit 1
		;;
	esac
}

echo "================== PTS ==================" >> $REPORT_PATH/$REPORT_FILENAME
echo "TODO: add test machine info" >> $REPORT_PATH/$REPORT_FILENAME
echo "================== PTS ==================" >> $REPORT_PATH/$REPORT_FILENAME

if [ -f "pts.log" ]; then
	pasre_bench pts.log atomicbench
	echo "=========================================" >> $REPORT_PATH/$REPORT_FILENAME
	pasre_bench pts.log circustent
else
	echo "pts.log not exist"
fi

echo "================== PTS  END ==================" >> $REPORT_PATH/$REPORT_FILENAME
dos2unix $REPORT_PATH/$REPORT_FILENAME